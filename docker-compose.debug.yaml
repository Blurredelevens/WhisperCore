services:
  web:
    build: .
    ports:
      - "5000:5000"
      - "5131:5131"
    env_file:
      - .env
    volumes:
      - .:/app
      - /app/__pycache__
      - /app/.pytest_cache
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - GROQ_API_KEY=${GROQ_API_KEY}
      - PYTHONPATH=/app
      - PYDEVD_DISABLE_FILE_VALIDATION=1
    restart: always
    command: [ "sh", "-c", "pip install debugpy -t /tmp && python  /tmp/debugpy  --wait-for-client --listen 0.0.0.0:5131 -m flask run --debug --host 0.0.0.0 --port 5000" ]
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  db:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U whispercore"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data:
